{"version":3,"file":"common.d6d6962f1867c40a.js","mappings":"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","names":["LoadingSpinnerComponent","constructor","this","faSpinner","static","selectors","i0","LoadingSpinnerModule","CommonModule","FontAwesomeModule","DeleteCourseComponent","ngbActiveModal","deleteCourseService","hasStudents","course","total_students","core","ctx","NgIf","NgClass","DeleteCourseService","ngbModal","httpClient","router","configService","deleteCourseModal","open","size","centered","deleteCourse","delete","params","api","route","id","subscribe","success","elem","document","getElementById","parentNode","removeChild","navigate","err","console","log","dismissAll","factory","HeaderComponent","publisherService","userService","Observable","ngOnInit","publisher$","getPublisher","user","_angular_core__WEBPACK_IMPORTED_MODULE_0__","HeaderModule","CoursesService","coverImage","cover","publisher_id","PublisherResolver","resolve","paramMap","get","PublisherService","http","config","uid","id_type","pipe","publisher","WebcoursesService","getWebcourses","cid","publisherCourses","ReviewModeComponent","faTimes","faCheck","markColours","option","colours","selected","correct","FadeInOut","ReviewModeModule","PipesModule"],"sourceRoot":"webpack:///","sources":["./src/app/core/modules/loading-spinner/loading-spinner.component.ts","./src/app/core/modules/loading-spinner/loading-spinner.component.html","./src/app/core/modules/loading-spinner/loading-spinner.module.ts","./src/app/pages/admin/builder/components/delete-course/delete-course.component.html","./src/app/pages/admin/builder/components/delete-course/delete-course.component.ts","./src/app/pages/admin/builder/components/delete-course/delete-course.service.ts","./src/app/pages/admin/publisher/blocks/header/header.component.html","./src/app/pages/admin/publisher/blocks/header/header.component.ts","./src/app/pages/admin/publisher/blocks/header/header.module.ts","./src/app/pages/admin/publisher/courses/courses.service.ts","./src/app/pages/catalogue/publisher/publisher.resolver.ts","./src/app/pages/catalogue/publisher/publisher.service.ts","./src/app/pages/publisher/webcourses/webcourses.service.ts","./src/app/pages/webcourse/activities/workarea/review-mode/review-mode.component.html","./src/app/pages/webcourse/activities/workarea/review-mode/review-mode.component.ts","./src/app/pages/webcourse/activities/workarea/review-mode/review-mode.module.ts"],"sourcesContent":["import { Component } from '@angular/core'\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons'\r\n\r\n@Component({\r\n  selector: 'app-loading-spinner',\r\n  templateUrl: './loading-spinner.component.html',\r\n  styleUrls: ['./loading-spinner.component.scss']\r\n})\r\nexport class LoadingSpinnerComponent {\r\n\r\n  faSpinner = faSpinner\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<div id=\"fullMainContent\" class=\"text-center my-3\">\r\n  <fa-icon [icon]=\"faSpinner\" [pulse]=\"true\" [spin]=\"true\" class=\"wcng-spinner\"></fa-icon>\r\n</div>\r\n","import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome'\r\n\r\nimport { LoadingSpinnerComponent } from './loading-spinner.component'\r\n\r\n@NgModule({\r\n  declarations: [LoadingSpinnerComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FontAwesomeModule\r\n  ],\r\n  exports: [LoadingSpinnerComponent]\r\n})\r\n\r\nexport class LoadingSpinnerModule { }\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title text-danger\">Danger zone</h4>\r\n  <button\r\n    (click)=\"ngbActiveModal.dismiss('Cross click')\"\r\n    type=\"button\"\r\n    class=\"close\"\r\n    aria-label=\"Close\"\r\n  >\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n\r\n  <!-- COURSE HAS NO STUDENTS AND CAN BE DELETED -->\r\n\r\n  <div class=\"container\" *ngIf=\"!hasStudents; else unavailable\">\r\n    <div class=\"row\">\r\n      <div class=\"col-auto mt-3\">\r\n        <i class=\"fa-solid fa-triangle-exclamation fa-beat fa-2xl text-danger mt-3\"></i>\r\n      </div>\r\n      <div class=\"col\">\r\n        <p class=\"lead\">\r\n          Do you really want to delete<br>\r\n          <span class=\"font-weight-bold\">{{ this.deleteCourseService.course.title }}</span>\r\n        </p>\r\n        <form class=\"container m-1\">\r\n          <input\r\n            type=\"checkbox\"\r\n            class=\"form-check-input\"\r\n            id=\"confirmation\"\r\n            (change)=\"deleteLock = !deleteLock\"\r\n            >\r\n          <label for=\"confirmation\">\r\n            <span class=\"font-weight-bold\">Yes, </span> I really wish to delete the\r\n            <span class=\"font-italic\">{{ this.deleteCourseService.course.title}}</span>\r\n            course.\r\n          </label>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <!-- COURSE HAS STUDENTS AND CANNOT BE DELETED -->\r\n\r\n  <ng-template #unavailable>\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-auto my-auto\">\r\n          <i class=\"fa-solid fa-ban fa-2xl text-warning\"></i>\r\n        </div>\r\n        <div class=\"col my-auto lead\">\r\n          The <span class=\"font-weight-bold\">{{ this.deleteCourseService.course.title }}</span> course\r\n          has students. It cannot be deleted.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n\r\n</div>\r\n\r\n<div class=\"modal-footer\">\r\n  <button\r\n    type=\"button\"\r\n    class=\"btn btn-primary mx-2\"\r\n    (click)=\"ngbActiveModal.close('Abort click')\"\r\n  >\r\n    Abort\r\n  </button>\r\n  <button\r\n    type=\"button\"\r\n    class=\"btn btn-danger mx-2\"\r\n    (click)=\"this.deleteCourseService.deleteCourse()\"\r\n    [disabled]=\"deleteLock\"\r\n    [ngClass]=\"hasStudents ? 'd-none' : ''\"\r\n  >\r\n    Delete\r\n  </button>\r\n</div>\r\n","import { Component } from '@angular/core'\r\nimport { NgIf, NgClass } from '@angular/common'\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap'\r\nimport { DeleteCourseService } from './delete-course.service'\r\n\r\n@Component({\r\n  selector: 'wngx-delete-course',\r\n  standalone: true,\r\n  templateUrl: './delete-course.component.html',\r\n  styleUrls: ['./delete-course.component.scss'],\r\n  imports: [NgIf, NgClass]\r\n})\r\n\r\nexport class DeleteCourseComponent {\r\n\r\n  public deleteLock = true // flipped when user selects delete confirmation checkbox\r\n\r\n  constructor(\r\n    public ngbActiveModal: NgbActiveModal,\r\n    public deleteCourseService: DeleteCourseService\r\n  ) {}\r\n\r\n  get hasStudents(): boolean {\r\n    return this.deleteCourseService.course.total_students === 0 ? false : true\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap'\r\nimport { DeleteCourseComponent } from './delete-course.component'\r\nimport { Course } from 'src/app/models/course.model'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { ConfigService } from 'src/app/core/services/config/config.service'\r\nimport { Router } from '@angular/router'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DeleteCourseService {\r\n\r\n  public course: Course\r\n\r\n  constructor(\r\n    private ngbModal: NgbModal,\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private configService: ConfigService\r\n  ) { }\r\n\r\n  deleteCourseModal(course: Course) {\r\n    this.course = course\r\n    this.ngbModal.open(DeleteCourseComponent, {\r\n      size: 'md', centered: true\r\n    })\r\n  }\r\n\r\n  deleteCourse() {\r\n    this.httpClient.delete(`\r\n      ${this.configService.params.api.route}/admin/publisher/courses/${this.course.id}`\r\n    ).subscribe(\r\n      (success) => {\r\n        if (success) {\r\n          let elem = document.getElementById('course-id-' + this.course.id)\r\n\r\n          // if elem, we were on course index page: remove course from index\r\n          // otherwise, return to course index on course delete\r\n          if (elem) {\r\n            elem.parentNode.removeChild(elem)\r\n          } else {\r\n            this.router.navigate(['/admin', 'publisher', 'courses'])\r\n          }\r\n        }\r\n      },\r\n      (err) => { console.log(err) },\r\n      () => { this.ngbModal.dismissAll() }\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"container border\" *ngIf=\"publisher$ | async as publisher\" @fadeInOut>\r\n  <div class=\"row d-flex justify-content-center my-auto\">\r\n    <div class=\"col-auto py-3 my-auto\">\r\n      <!-- This should be a block, with HTML separated out like e.g. the Contact page's -->\r\n      <img src=\"publisher-files/{{publisher.id}}/theme/logo.png\" alt=\"\" style=\"max-height: 6rem;\" class=\"mr-4 img-fluid\">\r\n    </div>\r\n    <div class=\"col-auto py-3 my-auto\">\r\n      <div class=\"lead\">{{ publisher.name }} {{ title }}</div>\r\n      <div class=\"text-secondary\">Thank you for publishing at Cultivate Learning</div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core'\r\nimport { Observable } from 'rxjs'\r\nimport { UserService } from 'src/app/core/services/user/user.service'\r\nimport { Publisher } from 'src/app/models/publisher.model'\r\nimport { PublisherService } from 'src/app/pages/catalogue/publisher/publisher.service'\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.sass']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  @Input() title: string\r\n\r\n  public publisher$ = new Observable<Publisher>\r\n\r\n  constructor(\r\n    private publisherService: PublisherService,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.publisher$ = this.publisherService.getPublisher(this.userService.user.id)\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { HeaderComponent } from './header.component'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HeaderComponent\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    HeaderComponent\r\n  ]\r\n})\r\n\r\nexport class HeaderModule { }\r\n","import { Injectable } from '@angular/core'\r\nimport { Course } from 'src/app/models/course.model'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CoursesService {\r\n\r\n  constructor() { }\r\n\r\n  coverImage(course: Course) {\r\n    return (course.cover === 'default') ?\r\n      'assets/cl-logo.png' :\r\n      `publisher-files/${course.publisher_id}/courses/${course.id}/images/${course.cover}`\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { ActivatedRouteSnapshot } from '@angular/router'\r\nimport { Observable } from 'rxjs'\r\nimport { PublisherService } from './publisher.service'\r\n\r\n\r\n@Injectable()\r\nexport class PublisherResolver {\r\n\r\n  constructor(\r\n    public publisherService: PublisherService\r\n  ) {}\r\n\r\n  public resolve(\r\n    route: ActivatedRouteSnapshot\r\n  ): Observable<any> {\r\n    if (route.paramMap.get('aid')) {\r\n      return this.publisherService.getPublisher(route.paramMap.get('aid'), 'aid')\r\n    } else if (route.paramMap.get('pid')) {\r\n      return this.publisherService.getPublisher(route.paramMap.get('pid'), 'pid')\r\n    } else {\r\n      return this.publisherService.getPublisher(route.paramMap.get('pub_id'), 'pub')\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { ConfigService } from './../../../core/services/config/config.service'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PublisherService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private config: ConfigService\r\n  ) { }\r\n\r\n  getPublisher(uid: any, id_type?:string) {\r\n    return this.http.get<any>(`\r\n      ${this.config.params.api.route}/publisher/profile/${uid}\r\n    `).pipe(publisher => publisher)\r\n\r\n    // We used to fetch publisher's details based on PID, AID and PUB\r\n    // via URL's ?type=... see code below, which was the original line 17 above.\r\n\r\n    // ${this.config.params.api.route}/publisher/profile/index.php?id=${id}&type=${type}\r\n\r\n    // This might come in handy later, but for now is not needed.\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { ConfigService } from '../../../core/services/config/config.service'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebcoursesService {\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private configService: ConfigService\r\n\r\n  ) { }\r\n\r\n  getWebcourses(cid: string) {\r\n    let i = (cid) ? `?cid=${cid}` : ''\r\n    return this.httpClient.get<any[]>(\r\n      `${this.configService.params.api.route}/publisher/admin/courses/index.php${i}`\r\n    ).pipe( publisherCourses => publisherCourses )\r\n  }\r\n\r\n}\r\n","<div class=\"row\" @fadeInOut>\r\n  <div class=\"container-fluid\"\r\n    *ngIf=\"activity.meta.activity_type === 'radio' || activity.meta.activity_type === 'checkbox'\">\r\n\r\n    <div *ngFor=\"let option of activity.answers; let l = last;\" class=\"row\">\r\n\r\n      <!-- MARKED RADIO & CHECKBOX ACTIVITIES -->\r\n      <div *ngIf=\"activity.meta.marked\" class=\"col-sm-1 col-2 py-1 text-center\">\r\n        <span *ngIf=\"option.selected\">\r\n          <fa-icon [icon]=\"faTimes\" size=\"lg\" *ngIf=\"!option.correct\" class=\"text-danger\"></fa-icon>\r\n          <fa-icon [icon]=\"faCheck\" size=\"lg\" *ngIf=\"option.correct\" class=\"text-success\"></fa-icon>\r\n        </span>\r\n\r\n        <span *ngIf=\"!option.selected\">\r\n          <fa-icon [icon]=\"faCheck\" size=\"lg\" *ngIf=\"option.correct\" style=\"color: #c8cacc;\"></fa-icon>\r\n        </span>\r\n      </div>\r\n\r\n      <!-- UNMARKED RADIO & CHECKBOX ACTIVITIES -->\r\n      <div *ngIf=\"!activity.meta.marked\" class=\"col-sm-1 col-2 py-1 text-center\">\r\n        <span *ngIf=\"option.selected\">\r\n          <fa-icon [icon]=\"faCheck\" size=\"lg\" class=\"text-success\"></fa-icon>\r\n        </span>\r\n      </div>\r\n\r\n      <!-- SELECTION LABEL -->\r\n      <div class=\"col-sm-10 col-9 py-1\"\r\n        [ngStyle]=\"{'border-bottom' : (!l) ? '1px dashed #999' : ''}\"\r\n        [innerHtml]=\"option.caption  | safehtml: 'html'\"\r\n        >\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <!-- TEXTAREA FORM -->\r\n\r\n  <div *ngIf=\"activity.meta.activity_type === 'textarea'\" class=\"container\">\r\n    <textarea\r\n      cols=\"66\"\r\n      [rows]=\"activity.user_answers.length / 78\"\r\n      class=\"form-control\" disabled>{{activity.user_long_answer}}\r\n    </textarea>\r\n  </div>\r\n\r\n  <!-- TEXT INPUT FORM -->\r\n\r\n  <div *ngIf=\"activity.meta.activity_type === 'text'\" class=\"container\">\r\n    <input type=\"text\" class=\"form-control\" value=\"{{activity.user_long_answer}}\" disabled>\r\n  </div>\r\n\r\n  <!-- CLICK ACTIVITY -->\r\n\r\n  <div  *ngIf=\"activity.meta.activity_type === 'click' && activity.meta.style != 'image'\" class=\"container-fluid\">\r\n    <ul class=\"clickActivity\">\r\n      <li\r\n        class=\"text-left px-3\"\r\n        *ngFor=\"let option of activity.answers; let i = index\"\r\n        [ngClass]=\"markColours(option)\"\r\n        [innerHtml]=\"option.caption\"\r\n      >\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div *ngIf=\"activity.meta.activity_type === 'click' && activity.meta.style === 'image'\" class=\"container-fluid\">\r\n    <img\r\n      *ngFor=\"let image of activity.answers; let i = index\"\r\n      [src]=\"image.caption.src\"\r\n      [alt]=\"image.caption.alt\"\r\n      class=\"click-img mr-2 mt-2\"\r\n      [ngClass]=\"markColours(image)\"\r\n    >\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core'\r\nimport { Activity } from './../models/activity.model'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport { FadeInOut } from '../../../../../core/animations/fade-in-out.animation'\r\n\r\n@Component({\r\n  selector: 'app-review-mode',\r\n  templateUrl: './review-mode.component.html',\r\n  styleUrls: ['./review-mode.component.scss'],\r\n  animations: [FadeInOut]\r\n})\r\nexport class ReviewModeComponent implements OnInit {\r\n\r\n  @Input() activity: Activity\r\n\r\n  faTimes = faTimes\r\n  faCheck = faCheck\r\n\r\n  public colours: string\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  markColours(option) {\r\n\r\n    if (option.selected && option.correct === 1) {\r\n      this.colours = 'clickCorrect'\r\n    } else if (option.selected && option.correct === 0) {\r\n      this.colours = 'clickWrong'\r\n    } else if (!option.selected && option.correct === 1) {\r\n      this.colours = 'clickMissed'\r\n    } else {\r\n      this.colours = 'clickFalse'\r\n    }\r\n\r\n    return this.colours\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { ReviewModeComponent } from './review-mode.component'\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome'\r\nimport { PipesModule } from './../../../../../shared/pipes/pipes.module'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ReviewModeComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PipesModule,\r\n    FontAwesomeModule\r\n  ],\r\n  exports: [\r\n    ReviewModeComponent\r\n  ]\r\n})\r\nexport class ReviewModeModule { }\r\n"],"x_google_ignoreList":[]}