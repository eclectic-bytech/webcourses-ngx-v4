{"version":3,"file":"696.682af874bfdc1c8f.js","mappings":"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","names":["WebcoursesService","constructor","static","factory","i0","routes","path","component","WebcoursesComponent","route","gravatarMd5","webcoursesService","appService","accessCodeModalService","userService","courseService","navService","this","faDiagramProject","getUser","ngOnInit","setTitle","snapshot","data","title","accessCodeRoutine","subscription","subscribe","user","userSelectedCourse$","getCourse","current_course_id","enterButton","aid","NavigateByAid","queryParamMap","get","accessCodeModal","defaultCode","submitCode","percentDone","ta","tac","type","percent","Math","round","ngOnDestroy","unsubscribe","core","selectors","FadeInOut","WebcoursesRoutingModule","RouterModule","CommonModule","WebcoursesModule","NgbModule","GravatarModule","MatButtonModule","CatalogueCardModule","LoadingSpinnerModule","FontAwesomeModule"],"sourceRoot":"webpack:///","sources":["./src/app/pages/user/webcourses/webcourses.service.ts","./src/app/pages/user/webcourses/webcourses.component.html","./src/app/pages/user/webcourses/webcourses-routing.module.ts","./src/app/pages/user/webcourses/webcourses.component.ts","./src/app/pages/user/webcourses/webcourses.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class WebcoursesService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n}\r\n","<div id=\"fullMainContent\">\r\n  <div\r\n    class=\"container-fluid\"\r\n    *ngIf=\"this.user$ | async as userProfile\"\r\n    @fadeInOut\r\n  >\r\n    <div class=\"row d-flex align-items-start my-4\">\r\n      <div class=\"col-12 col-lg-4\">\r\n        <!-- COL PLACE HOLDER -->\r\n      </div>\r\n      <div class=\"col-12 col-lg-4\">\r\n        <img\r\n          ngxGravatar\r\n          [src]=\"this.gravatarMd5.gravatarMD5src(userProfile.email)\"\r\n          [size]=\"100\"\r\n          class=\"mr-4 img-fluid\"\r\n        />\r\n        <div class=\"lead d-inline-block\">\r\n          <div *ngIf=\"userProfile.first_name; else newUser\">\r\n            Welcome back, <span class=\"text-capitalize\">{{ userProfile.first_name }}</span>\r\n          </div>\r\n          <ng-template #newUser>\r\n            <div>Welcome, {{ userProfile.username }}</div>\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-12 col-lg-4 text-right align-items-start\">\r\n        <!-- COL PLACE HOLDER -->\r\n      </div>\r\n    </div>\r\n\r\n    <hr class=\"mb-3\">\r\n\r\n    <div\r\n      class=\"row d-flex justify-content-center align-items-start pt-3\"\r\n      *ngIf=\"this.userService.userCourses$ | async as userCourses; else loading\"\r\n      @fadeInOut\r\n    >\r\n\r\n      <div\r\n        class=\"col-xs-12 col-lg-4 col-xxl-3\"\r\n        *ngIf=\"userSelectedCourse$ | async as userSelectedCourse\"\r\n      >\r\n        <div class=\"card mb-4\">\r\n          <img\r\n            class=\"card-img-top\"\r\n            src=\"publisher-files/1/theme/selected-course.jpg\"\r\n            alt=\"\"\r\n          >\r\n          <div class=\"card-body\">\r\n            <div class=\"container-fluid\">\r\n              <div class=\"row justify-content-between my-auto\">\r\n                <div class=\"col-auto\">\r\n                  <small class=\"text-secondary text-uppercase\">Selected course</small>\r\n                  <div class=\"card-title text-dark\">{{ userSelectedCourse.title }}</div>\r\n                </div>\r\n                <div class=\"col-auto\">\r\n                  <button\r\n                    mat-button color=\"primary\" class=\"border my-3\"\r\n                    (click)=\"enterButton(userSelectedCourse.user_progress.selected_aid)\"\r\n                  >\r\n                    Resume\r\n                  </button>\r\n                  <button\r\n                    mat-button color=\"primary\" class=\"my-3 mx-1\"\r\n                    [routerLink]=\"['/catalogue', 'course', userSelectedCourse.id]\"\r\n                  >\r\n                    About\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div class=\"row justify-content-between my-auto\">\r\n                <div class=\"col-auto text-secondary\" title=\"Activities\">\r\n                  <small>\r\n                    {{ userSelectedCourse.total_activities }}\r\n                    <fa-icon [icon]=\"faDiagramProject\" class=\"px-1\"></fa-icon>\r\n                  </small>\r\n                </div>\r\n                <div class=\"col-auto\">\r\n                  <a [routerLink]=\"['/catalogue', 'publisher', userSelectedCourse.publisher.id_alias ]\">\r\n                    <img [src]=\"'publisher-files/' + userSelectedCourse.publisher.id_alias + '/theme/logo.png'\" class=\"pt-2 img-fluid\" style=\"max-height: 4rem;\">\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"progress\" style=\"height: 6px\">\r\n            <div class=\"progress-bar progress-bar-striped\"\r\n              *ngIf=\"userSelectedCourse.user_progress\"\r\n              role=\"progressbar\"\r\n              [title]=\"percentDone(\r\n                userSelectedCourse.total_activities, userSelectedCourse.user_progress.total_activities_completed, 'string'\r\n              )\"\r\n              [style.width.%]=\"percentDone(\r\n                userSelectedCourse.total_activities, userSelectedCourse.user_progress.total_activities_completed, 'integer'\r\n              )\"\r\n              [attr.aria-valuenow]=\"0\"\r\n              aria-valuemin=\"0\"\r\n              [attr.aria-valuemax]=\"100\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- AREA FOR DISPLAYING SELECTED COURSE -->\r\n      </div>\r\n\r\n      <div class=\"col-xs-12 col-lg-8 col-xxl-9 align-top\">\r\n        <div class=\"container-fluid pl-0\">\r\n          <div class=\"row justify-content-between align-items-start\">\r\n            <div class=\"col-auto\">\r\n              <button mat-button color=\"primary\" class=\"border mb-4\" (click)=\"this.accessCodeModalService.accessCodeModal()\">\r\n                Unlock a course using an access code\r\n              </button>\r\n            </div>\r\n            <div class=\"col-auto\">\r\n              <small class=\"text-dark text-uppercase\">{{userCourses.length}} courses unlocked</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"container p-0 mb-3 border rounded\"\r\n          *ngFor=\"let course of userCourses, let i = index, let l = last\"\r\n        >\r\n\r\n          <div class=\"row no-gutters\">\r\n            <div class=\"col-sm-12 col-md-4\">\r\n              <div class=\"card\">\r\n                <img\r\n                  class=\"card-img-top\"\r\n                  style=\"object-fit: cover; height: 11rem;\"\r\n                  src=\"publisher-files/{{course.publisher_id}}/courses/{{course.id}}/images/{{course.cover}}\"\r\n                  alt=\"{{course.cover_alt}}\"\r\n                >\r\n              </div>\r\n            </div>\r\n            <div class=\"col-auto ml-4\">\r\n              <div class=\"lead mt-3\">{{ course.title }} <small class=\"text-secondary\"></small></div>\r\n              <div class=\"text-dark\">\r\n                Joined: {{ course.user_progress.created_at | date:'longDate' }}\r\n              </div>\r\n              <button\r\n                mat-button color=\"primary\" class=\"border my-3\"\r\n                (click)=\"enterButton(course.user_progress.selected_aid)\"\r\n              >\r\n                Enter\r\n              </button>\r\n              <button\r\n                mat-button color=\"primary\" class=\"mt-3 ml-2\"\r\n                [routerLink]=\"['/catalogue', 'course', course.id]\"\r\n              >\r\n                About\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"progress\" style=\"height: 6px\">\r\n            <div class=\"progress-bar progress-bar-striped\"\r\n              *ngIf=\"course.user_progress\"\r\n              role=\"progressbar\"\r\n              [title]=\"percentDone(\r\n                course.total_activities, course.user_progress.total_activities_completed, 'string'\r\n              )\"\r\n              [style.width.%]=\"percentDone(\r\n                course.total_activities, course.user_progress.total_activities_completed, 'integer'\r\n              )\"\r\n              [attr.aria-valuenow]=\"0\"\r\n              aria-valuemin=\"0\"\r\n              [attr.aria-valuemax]=\"100\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div *ngIf=\"userCourses.length === 0\" class=\"col-xs-12 col-lg-8 col-xxl-9\">\r\n        <h1 class=\"common-heading mb-2 mt-5 text-success\">You've not yet enrolled in any courses.</h1>\r\n        <p class=\"text-dark\">Start improving your skills by using a\r\n          <a (click)=\"this.accessCodeModalService.accessCodeModal()\" class=\"handy\">\r\n            course access code\r\n          </a>.<br>\r\n          Visit the <a [routerLink]=\"['/catalogue']\" class=\"text-nowrap\">Webcourse Catalogue</a> to\r\n          browse all publicly available courses.\r\n        </p>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <ng-template #loading>\r\n      <app-loading-spinner></app-loading-spinner>\r\n    </ng-template>\r\n\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core'\r\nimport { RouterModule, Routes } from '@angular/router'\r\nimport { CommonModule } from '@angular/common'\r\nimport { WebcoursesComponent } from './webcourses.component'\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: WebcoursesComponent,\r\n    data: {\r\n      title: 'My web courses'\r\n    }\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    [RouterModule.forChild(routes)],\r\n    CommonModule\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class WebcoursesRoutingModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core'\r\nimport { ActivatedRoute } from '@angular/router'\r\nimport { Observable, Subscription } from 'rxjs'\r\nimport { GravatarMd5Service } from 'src/app/core/services/gravatar-md5/gravatar-md5.service'\r\nimport { faDiagramProject } from '@fortawesome/free-solid-svg-icons'\r\n\r\n// WNGX services\r\nimport { AppService } from '../../../app.service'\r\nimport { UserService } from '../../../core/services/user/user.service'\r\nimport { AccessCodeModalService } from '../../components/access-code-modal/access-code-modal.service'\r\nimport { CourseService } from '../../catalogue/course/course.service'\r\nimport { WebcoursesService } from './webcourses.service'\r\nimport { NavService } from '../../webcourse/activities/workarea/nav/nav.service'\r\n\r\n// WNGX models and misc\r\nimport { JetstreamUser } from 'src/app/core/models/jetstream-user.model'\r\nimport { Course } from 'src/app/models/course.model'\r\nimport { FadeInOut } from '../../../core/animations/fade-in-out.animation'\r\n\r\n@Component({\r\n  selector: 'app-webcourses',\r\n  templateUrl: './webcourses.component.html',\r\n  styleUrls: ['./webcourses.component.scss'],\r\n  animations: [FadeInOut]\r\n})\r\n\r\nexport class WebcoursesComponent implements OnInit, OnDestroy {\r\n\r\n  public faDiagramProject = faDiagramProject\r\n\r\n  public showGroupCodeInput = false\r\n  public user$: Observable<JetstreamUser> = this.userService.getUser()\r\n  public userSelectedCourse$: Observable<Course>\r\n  private subscription: Subscription\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    public gravatarMd5: GravatarMd5Service,\r\n    public webcoursesService: WebcoursesService,\r\n    private appService: AppService,\r\n    public accessCodeModalService: AccessCodeModalService,\r\n    public userService: UserService,\r\n    private courseService: CourseService,\r\n    private navService: NavService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.appService.setTitle(this.route.snapshot.data.title)\r\n    this.accessCodeRoutine()\r\n\r\n    this.subscription = this.userService.getUser().subscribe(\r\n      (user: JetstreamUser) => {\r\n        this.userSelectedCourse$ = this.courseService.getCourse(user.current_course_id)\r\n      }\r\n    )\r\n  }\r\n\r\n  enterButton(aid: number) {\r\n    this.navService.NavigateByAid(aid)\r\n  }\r\n\r\n  accessCodeRoutine() {\r\n    if (this.route.snapshot.queryParamMap.get('code')) {\r\n      this.accessCodeModalService.accessCodeModal()\r\n      this.accessCodeModalService.defaultCode = this.route.snapshot.queryParamMap.get('code')\r\n      this.accessCodeModalService.submitCode(this.route.snapshot.queryParamMap.get('code'))\r\n    }\r\n  }\r\n\r\n  percentDone(ta: number, tac: number, type: string) {\r\n    let percent = Math.round(tac ? tac / ta * 100 : 0)\r\n    if (type === 'integer') {\r\n      return percent\r\n    } else if (type === 'string') {\r\n      return percent + '% Done'\r\n    } else {\r\n      return \"Numeric stat not available\"\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe()\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\r\nimport { GravatarModule } from 'ngx-gravatar'\r\nimport { MatButtonModule } from '@angular/material/button'\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome'\r\n\r\nimport { WebcoursesComponent } from './webcourses.component'\r\nimport { WebcoursesRoutingModule } from './webcourses-routing.module'\r\nimport { CatalogueCardModule } from '../../components/course-card/catalogue-card/catalogue-card.module'\r\nimport { LoadingSpinnerModule } from '../../../core/modules/loading-spinner/loading-spinner.module'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    WebcoursesComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NgbModule,\r\n    GravatarModule,\r\n    MatButtonModule,\r\n    WebcoursesRoutingModule,\r\n    CatalogueCardModule,\r\n    LoadingSpinnerModule,\r\n    FontAwesomeModule\r\n  ]\r\n})\r\n\r\nexport class WebcoursesModule { }\r\n"],"x_google_ignoreList":[]}