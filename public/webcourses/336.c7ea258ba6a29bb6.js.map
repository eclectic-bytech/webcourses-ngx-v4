{"version":3,"file":"336.c7ea258ba6a29bb6.js","mappings":"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","names":["DashboardService","constructor","httpClient","configService","this","recentCodeUses","get","params","api","route","pipe","codeUses","recentLogins","users","publisherInterest","static","core","factory","i0","routes","path","component","DashboardComponent","dashboardService","userService","gravatarMd5Service","faRepeat","Date","refresh","recentCodeUses$","lastRefresh","refreshLatestLogins","recentLogins$","lastLatestLoginsRefresh","selectors","ctx","FadeInOut","DashboardRoutingModule","RouterModule","DashboardModule","CommonModule","FontAwesomeModule","GravatarModule","LoadingSpinnerModule"],"sourceRoot":"webpack:///","sources":["./src/app/pages/admin/system/dashboard/dashboard.service.ts","./src/app/pages/admin/system/dashboard/dashboard.component.html","./src/app/pages/admin/system/dashboard/dashboard-routing.module.ts","./src/app/pages/admin/system/dashboard/dashboard.component.ts","./src/app/pages/admin/system/dashboard/dashboard.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\n\r\n// WNGX imports\r\nimport { ConfigService } from 'src/app/core/services/config/config.service'\r\nimport { Coupon } from 'src/app/models/coupon.model'\r\nimport { JetstreamUser } from 'src/app/core/models/jetstream-user.model'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardService {\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    private configService: ConfigService\r\n  ) { }\r\n\r\n  recentCodeUses() {\r\n    return this.httpClient\r\n      .get<Coupon[]>(`${this.configService.params.api.route}/admin/system/recent-code-uses`)\r\n      .pipe(codeUses => codeUses)\r\n  }\r\n\r\n  recentLogins() {\r\n    return this.httpClient\r\n      .get<JetstreamUser[]>(`${this.configService.params.api.route}/admin/system/recent-logins`)\r\n      .pipe(users => users)\r\n  }\r\n\r\n  publisherInterest() {\r\n    return this.httpClient\r\n      .get(`${this.configService.params.api.route}/admin/system/publisher-interest`)\r\n      .pipe(users => users)\r\n  }\r\n}\r\n","<div\r\n  id=\"fullMainContent\"\r\n  class=\"container mb-5\"\r\n  @fadeInOut\r\n  >\r\n  <div class=\"row border border-secondary rounded-lg\" style=\"background-color: lightslategray;\">\r\n    <div class=\"col text-center\">\r\n      <img src=\"assets/starfleet.png\" class=\"my-3\">\r\n    </div>\r\n  </div>\r\n  <div class=\"row my-3\">\r\n    <div class=\"col\">0 publishers</div>\r\n    <div class=\"col\">0 courses</div>\r\n    <div class=\"col\">0 activities</div>\r\n    <div class=\"col\">0 user completed activities</div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-12 col-lg-6 py-4\">\r\n      <div class=\"h3 text-uppercase\">Latest logins\r\n        <button type=\"button\" class=\"btn btn-link btn-sm ml-3\" (click)=\"refreshLatestLogins()\">\r\n          <fa-icon [icon]=\"faRepeat\" class=\"text-primary mr-2\"></fa-icon>Refresh\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        class=\"container-fluid\"\r\n        *ngIf=\"(recentLogins$ | async) as recentLogins; else LoadingSpinner\"\r\n        @fadeInOut\r\n      >\r\n        <div *ngFor=\"let recentLogin of recentLogins\" class=\"font-weight-normal row my-2\">\r\n          <div class=\"col px-0\">\r\n            <img\r\n              ngxGravatar\r\n              [src]=\"this.gravatarMd5Service.gravatarMD5src(recentLogin.email)\"\r\n              [size]=\"50\"\r\n              class=\"mr-3 pull-left\"\r\n            />\r\n            <div class=\"d-block\">{{ recentLogin.email}} ({{ recentLogin.login_count }})</div>\r\n            <div class=\"d-block\">\r\n              <span class=\"fi fi-{{recentLogin.country | lowercase}} rounded border mr-2\" style=\"line-height: .9rem;\"></span>\r\n              <span class=\"text-secondary text-uppercase small\">{{ recentLogin.updated_at | date: 'E d MMM H:mm' }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <ng-template #LoadingSpinner>\r\n        <div class=\"text-center d-block\">\r\n          <app-loading-spinner></app-loading-spinner>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n\r\n    <div class=\"col-12 col-lg-6 py-4\">\r\n      <div class=\"d-block my-auto\">\r\n        <div class=\"h3 text-uppercase d-inline-block\">\r\n          Latest access-code uses\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-link btn-sm float-right\" (click)=\"refresh()\">\r\n          <fa-icon [icon]=\"faRepeat\" class=\"text-primary mr-2\"></fa-icon>Refresh\r\n        </button>\r\n      </div>\r\n      <table class=\"table table-sm\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\" class=\"text-center\">ID</th>\r\n            <th scope=\"col\">Label</th>\r\n            <th scope=\"col\" class=\"text-right\">Uses</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody *ngIf=\"(recentCodeUses$ | async) as recentCodeUses; else LoadingSpinner\" @fadeInOut>\r\n          <tr *ngFor=\"let recentCodeUse of recentCodeUses\">\r\n            <td class=\"text-center align-middle\">{{ recentCodeUse.cid }}</td>\r\n            <td class=\"h6 font-weight-normal\">\r\n              {{ recentCodeUse.label }}<br>\r\n              <span class=\"text-uppercase text-secondary font-weight-light small\">{{ recentCodeUse.updated_at | date: 'E d MMM H:mm' }}</span>\r\n            </td>\r\n            <td class=\"text-right align-middle h6 font-weight-normal\">\r\n              {{ recentCodeUse.uses }} / {{ recentCodeUse.uses_max }}<br>\r\n              <span class=\"text-uppercase text-secondary font-weight-light small\">{{ recentCodeUse.uses / recentCodeUse.uses_max * 100 | number: '1.0-1'}}% USED</span>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div class=\"py-1\">\r\n        <span class=\"text-secondary text-uppercase float-right small\">{{ this.lastRefresh | date: 'E H:mm:ss' }}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"publisherInterest$ | async as users\">\r\n    <div class=\"row\">\r\n      <div class=\"col\">\r\n        <div class=\"h3 text-uppercase d-inline-block mt-4 mb-2\">\r\n          Users interested in the web course builder\r\n        </div>\r\n        <table class=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">Country</th>\r\n              <th scope=\"col\">Member since</th>\r\n              <th scope=\"col\">Level of interest*</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let user of users\">\r\n              <td>{{ user.user.id }}</td>\r\n              <td>{{ user.user.email }}</td>\r\n              <td>\r\n                <span class=\"fi fi-{{user.user.country | lowercase}} rounded border mr-2\" style=\"line-height: .9rem;\"></span>\r\n              </td>\r\n              <td>{{ user.user.created_at | date: 'E d MMM H:mm' }}</td>\r\n              <td>{{ user.user.user_roles | json }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <div class=\"h3 text-uppercase d-inline-block mt-4 mb-2\">\r\n          * Level of interest\r\n        </div>\r\n        <table class=\"table table-striped\">\r\n          <thead>\r\n            <th scope=\"col\">ID</th>\r\n            <th scope=\"col\">Definition</th>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>2</td>\r\n              <td>Existing publisher</td>\r\n            </tr>\r\n            <tr>\r\n              <td>4</td>\r\n              <td>Interested</td>\r\n            </tr>\r\n            <tr>\r\n              <td>5</td>\r\n              <td>Requested access</td>\r\n            </tr>\r\n            <tr>\r\n              <td>6</td>\r\n              <td>Subscribed to builder news</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core'\r\nimport { RouterModule, Routes } from '@angular/router'\r\nimport { DashboardComponent } from './dashboard.component'\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule { }\r\n","import { Component } from '@angular/core'\r\nimport { Observable } from 'rxjs'\r\nimport { faRepeat } from '@fortawesome/free-solid-svg-icons'\r\n\r\n// WNGX imports\r\nimport { DashboardService } from './dashboard.service'\r\nimport { UserService } from 'src/app/core/services/user/user.service'\r\nimport { GravatarMd5Service } from 'src/app/core/services/gravatar-md5/gravatar-md5.service'\r\n\r\nimport { JetstreamUser } from 'src/app/core/models/jetstream-user.model'\r\nimport { Coupon } from 'src/app/models/coupon.model'\r\n\r\nimport { FadeInOut } from 'src/app/core/animations/fade-in-out.animation'\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.sass'],\r\n  animations: [FadeInOut]\r\n})\r\n\r\nexport class DashboardComponent {\r\n\r\n  public faRepeat = faRepeat\r\n\r\n  public recentCodeUses$: Observable<Coupon[]> = this.dashboardService.recentCodeUses()\r\n  public recentLogins$: Observable<JetstreamUser[]> = this.dashboardService.recentLogins()\r\n  public publisherInterest$: Observable<any> = this.dashboardService.publisherInterest()\r\n\r\n  public lastRefresh = new Date()\r\n  public lastLatestLoginsRefresh = new Date()\r\n\r\n  constructor(\r\n    public dashboardService: DashboardService,\r\n    public userService: UserService,\r\n    public gravatarMd5Service: GravatarMd5Service\r\n  ) { }\r\n\r\n  refresh() {\r\n    this.recentCodeUses$ = this.dashboardService.recentCodeUses()\r\n    this.lastRefresh = new Date()\r\n  }\r\n\r\n  refreshLatestLogins() {\r\n    this.recentLogins$ = this.dashboardService.recentLogins()\r\n    this.lastLatestLoginsRefresh = new Date()\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core'\r\nimport { CommonModule } from '@angular/common'\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome'\r\nimport { GravatarModule } from 'ngx-gravatar'\r\n\r\n// WNGX imports\r\nimport { DashboardComponent } from './dashboard.component'\r\n\r\nimport { DashboardRoutingModule } from './dashboard-routing.module'\r\nimport { LoadingSpinnerModule } from 'src/app/core/modules/loading-spinner/loading-spinner.module'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DashboardComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FontAwesomeModule,\r\n    GravatarModule,\r\n    DashboardRoutingModule,\r\n    LoadingSpinnerModule\r\n  ]\r\n})\r\nexport class DashboardModule { }\r\n"],"x_google_ignoreList":[]}